name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

env:
  APP_NAME: ${{values.name}}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
         username: ${{ '${{secrets.DOCKER_USERNAME}}' }}
         password: ${{ '${{secrets.DOCKER_PASSWORD}}' }}
         registry: https://${{values.dockerRepo}}

      # Step 3: Build the Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{values.dockerRepo}}/${{values.name}}:latest -f Dockerfile .

      # Step 4: Push Docker Image to Registry
      - name: Push Docker Image
        run: |
          docker push ${{values.dockerRepo}}/${{values.name}}:latest

      # Step 5: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      # - name: Set up kubeconfig
      #   run: |
      #     echo "${{ '${{secrets.KUBECONFIG_CONTENT}}' }}" > kubeconfig
      #     export KUBECONFIG=$PWD/kubeconfig
  deploy:
    name: deploy to aks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
       # Step 2: Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ '${{secrets.AZURE_CREDENTIALS}}' }}

      # Step 3: Set up AKS credentials
      - name: Set up AKS
        run: |
          az aks get-credentials --resource-group ${{ '${{secrets.AKS_RESOURCE_GROUP}}' }} --name ${{ values.cluster }}
          kubectl config view

      - name: Deploy to Kubernetes
        env:
          IMAGE: ${{values.dockerRepo}}/${{values.name}}:latest
        run: |
          kubectl apply -f k8s/deployment.yaml
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/${{values.name}}
