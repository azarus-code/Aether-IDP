apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: reactjs-app-template
  title: ReactJS Application Template
  description: A frontend template built with React.js, ideal for creating modern and dynamic user interfaces. Includes reusable components, basic routing, and integration with external APIs. Great for interactive web applications..
  groups:
    - frontend
spec:
  owner: aether_dev@techmahindra.com
  type: Website
  parameters:
    - title: Service Information
      required:
        - name
        - owner
        - description
      properties:
        name:
          title: Service Name
          type: string
          description: Unique name for the service.
        owner:
          title: Owner
          type: string
          description: GitHub username or organization owning the repository.
          enum:
            - azarus-code
        description:
          title: Description
          type: string
          description: Brief description of the service.
    - title: Pipeline Info
      properties:
        pipelineType:
          title: Pipeline Type
          type: string
          enum:
            - github
          description: Select the pipeline system to use
          validation:
            required: true
    - title: CI Configuration
      properties:
        buildType:
          title: code Build Type
          type: string
          enum:
            - docker
            - npm
            - mvn
          description: Select the service build tool
          validation:
            required: true
        staticScanType:
          title: Code analysis Type
          type: string
          enum:
            - sonar
            - EsLint
            - checkstyle
          description: Select the static code analysis tool
          validation:
            required: true
        securityScanType:
          title: SCA- Software Composition Analysis
          type: string
          enum:
            - blackduck
            - synk
            - OAWASP
          description: Select the static code analysis tool
          validation:
            required: true
        dockerRepo:
          title: Docker Repository
          type: string
          default: idpdeveacr.azurecr.io
          enum:
            - idpdeveacr.azurecr.io
            - backstagdeveacr.azurecr.io
          description: Provide the docker repo to push & pull image
          validation:
            required: true
    - title: CD Configuration
      properties:
        deployType:
          title: Deploy Type
          type: string
          enum:
            - AKS
          description: Select the deployment target
          validation:
            required: true
        deployEnv:
          title: Deploy Environment
          type: string
          default: dev
          enum:
            - dev
            - qa
            - canary
            - prod
          description: Select the deployment target
          validation:
            required: true
        clusterName:
          title: Cluster Name
          type: string
          default: bsidp-cluster
          enum:
            - docker-desktop
            - bsidp-cluster
          description: Select the AKS cluster Name
          validation:
            required: true
        namespace:
          title: K8s Namespace
          type: string
          default: default
          description: Provide the namespace to deploy
          validation:
            required: true
        
    # - title: Pipeline Configuration
    #   properties:
    #     pipelineType:
    #     title: Pipeline Type
    #     type: string
    #     enum:
    #       - Tekton
    #     description: Select the pipeline system to use
    #     validation:
    #       required: true
  steps:
    - id: fetch
      name: Fetch Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          namespace: ${{ parameters.namespace }}
          dockerRepo: ${{ parameters.dockerRepo }}
          description: ${{ parameters.description }}
          cluster: ${{parameters.clusterName}}
          codeAnalysis: ${{parameters.staticScanType}}
          softwareAnalysis: ${{parameters.securityScanType}}
          # docker_username: "${{ secrets.DOCKER_USERNAME }}"
          # docker_password: "${{ secrets.DOCKER_PASSWORD }}"
          # k8s_config: "${{ secrets.DOCKER_KUBE_CONFIG }}"
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: '${{ parameters.description }}'
        repoUrl: 'github.com?owner=${{ parameters.owner }}&repo=${{ parameters.name }}'
        #access: public
        repoVisibility: public
        defaultBranch: main
    - id: register-service
      name: Register in Backstage Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: Component:default/${{ parameters.name }}
